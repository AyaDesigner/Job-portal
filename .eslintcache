[{"/Users/roxi/Desktop/PROJECT/Job-portal/src/components/JobList.js":"1","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Job.js":"2","/Users/roxi/Desktop/PROJECT/Job-portal/src/App.js":"3","/Users/roxi/Desktop/PROJECT/Job-portal/src/index.js":"4","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/SocialMediaLinks.js":"5","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Button2.js":"6","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Button.js":"7"},{"size":2717,"mtime":1606574263954,"results":"8","hashOfConfig":"9"},{"size":1632,"mtime":1606521181399,"results":"10","hashOfConfig":"9"},{"size":487,"mtime":1606504568234,"results":"11","hashOfConfig":"9"},{"size":358,"mtime":1606488443956,"results":"12","hashOfConfig":"9"},{"size":1127,"mtime":1606488443952,"results":"13","hashOfConfig":"9"},{"size":155,"mtime":1606518011955,"results":"14","hashOfConfig":"9"},{"size":154,"mtime":1606521239225,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"thug1e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/roxi/Desktop/PROJECT/Job-portal/src/components/JobList.js",["34"],"import React from 'react';\nimport Axios from 'axios';\nimport Job from './Job';\n\n//function to remove html from job description\nconst removeHtml = (text) =>{\n    let countPar = 0;\n    let leftover = '';\n\n      for(let i = 0; i<text.length; i++){\n        if(text[i]==='<'){\n          countPar++;\n        }else if(text[i]==='>'){\n          countPar--;\n        }else if(countPar===0){\n          leftover+=text[i]\n        }\n      }\n      return leftover\n    }\n\nclass JobList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            keyword: '',\n            jobsArray: []\n        }\n        this.getJobs = this.getJobs.bind(this);\n    }\n\ngetJobs(){\n    Axios.get('https://remotive.io/api/remote-jobs')\n        .then(response => response.data)\n        .then(data => {\n            console.log(data)\n            this.setState({\n                jobsArray: data.jobs\n            })\n        })\n}\n\nfilterTitles = (ev)=>{\n    console.log(ev.target.value)\n    this.setState({keyword : ev.target.value})\n}\n\n// componentDidMount() {\n//     this.getJobs();\n// }\n\nrender() { \n    return (  \n        <div>\n            <input className=\"joblist--input\" type=\"text\" placeholder=\"e.g Front-end development\" onChange={this.filterTitles}></input>\n            <button onClick={this.getJobs}>Search</button>\n           <div className=\"job-list\">\n            {\n                this.state.jobsArray.filter((jobObject) => {\n                    if (this.state.keyword === '') {\n                        return jobObject;\n                    } else if (\n                        jobObject.title\n                            .toLowerCase()\n                            .includes(this.state.keyword.toLowerCase())\n                    ) {\n                        return jobObject;\n                    }\n                })\n                .map((jobObject) => {\n                    return (\n                        <Job\n                            logo={jobObject.company_logo_url}\n                            title={jobObject.title}\n                            salary={jobObject.salary}\n                            type={jobObject.job_type.split('_').join(' ')}                 \n                            location={jobObject.candidate_required_location}\n                            company={jobObject.company_name}\n                            date={jobObject.publication_date.slice(0,10)}\n                            description={removeHtml(jobObject.description)}\n                            // key={index}\n                            key={jobObject.id}\n                        />\n                    );\n                })\n            }\n          </div>\n        </div>\n    );\n}\n}\nexport default JobList;","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Job.js",[],"/Users/roxi/Desktop/PROJECT/Job-portal/src/App.js",[],["35","36"],"/Users/roxi/Desktop/PROJECT/Job-portal/src/index.js",[],["37","38"],"/Users/roxi/Desktop/PROJECT/Job-portal/src/components/SocialMediaLinks.js",["39","40","41","42"],"import React from 'react';\nimport './SocialMediaLinks.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGoogle, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons';\n  \nexport default function SocialMediaLinks() {\n    return (\n        <div className=\"social-media\">\n            <ul id=\"social-media-links\">                  \n                <li>\n                    <a href=\"https://www.facebook.com/\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faFacebook} />\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://twitter.com/\" \n                       target=\"_blank\"><FontAwesomeIcon \n                       icon={faTwitter} />\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://linkedin.com/\" \n                       target=\"_blank\"><FontAwesomeIcon \n                       icon={faLinkedin} />\n                    </a>\n                </li>\n            </ul>\n            <h4>Don't have an account ? Sign up now!</h4>\n        </div>\n    )\n}\n","/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Button2.js",[],"/Users/roxi/Desktop/PROJECT/Job-portal/src/components/Button.js",[],{"ruleId":"43","severity":1,"message":"44","line":59,"column":57,"nodeType":"45","messageId":"46","endLine":59,"endColumn":59},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":22,"nodeType":"55","messageId":"56","endLine":4,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":11,"column":57,"nodeType":"59","endLine":11,"endColumn":72},{"ruleId":"57","severity":1,"message":"58","line":17,"column":24,"nodeType":"59","endLine":17,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":23,"column":24,"nodeType":"59","endLine":23,"endColumn":39},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],"no-unused-vars","'faGoogle' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]